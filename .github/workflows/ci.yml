name: CI for Multi Microservices

on:
  push:
    paths:
      - 'app/microservice-1/**'
      - 'app/microservice-2/**'

jobs:
  check-for-changes:
    runs-on: ubuntu-latest
    outputs:
      ms1_changed: ${{ steps.check_ms1.outputs.ms1_changed }}
      ms2_changed: ${{ steps.check_ms2.outputs.ms2_changed }}
    steps:
      - name: Checkout code with enough history
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
        
      - name: Check for changes in Microservice 1
        id: check_ms1
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -q '^app/microservice-1/'; then
            echo "ms1_changed=true"
            echo "::set-output name=ms1_changed::true"
          else
            echo "ms1_changed=false"
            echo "::set-output name=ms1_changed::false"
          fi

      - name: Check for changes in Microservice 2
        id: check_ms2
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -q '^app/microservice-2/'; then
            echo "ms2_changed=true"
            echo "::set-output name=ms2_changed::true"
          else
            echo "ms2_changed=false"
            echo "::set-output name=ms2_changed::false"
          fi

  build-push-ms1:
    runs-on: ubuntu-latest
    needs: check-for-changes
    if: ${{ needs.check-for-changes.outputs.ms1_changed == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Get short Git commit SHA
        id: vars
        run: echo "::set-output name=commit_sha::$(git rev-parse --short HEAD)"

      - name: Build and push Docker image for Microservice 1
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/microservice-1:${{ steps.vars.outputs.commit_sha }} ./app/microservice-1
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/microservice-1:${{ steps.vars.outputs.commit_sha }}

      - name: Update Helm Chart for Microservice 1
        run: |
          sed -i 's/tag: ".*"/tag: "${{ steps.vars.outputs.commit_sha }}"/' helm/values-ms1.yaml
          git config --global user.name "kkamal123"
          git config --global user.email "engr.kkamal@gmail.com"
          git commit -m "Update Microservice-1 image tag to ${{ steps.vars.outputs.commit_sha }}"
          
      - name: Push updated Helm deployment to GitHub
        run: git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Use the automatically generated GITHUB_TOKEN

  build-push-ms2:
    runs-on: ubuntu-latest
    needs: check-for-changes
    if: ${{ needs.check-for-changes.outputs.ms2_changed == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Get short Git commit SHA
        id: vars
        run: echo "::set-output name=commit_sha::$(git rev-parse --short HEAD)"

      - name: Build and push Docker image for Microservice 2
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/microservice-2:${{ steps.vars.outputs.commit_sha }} ./app/microservice-2
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/microservice-2:${{ steps.vars.outputs.commit_sha }}

      - name: Update Helm Chart for Microservice 2
        run: |
          sed -i 's/tag: ".*"/tag: "${{ steps.vars.outputs.commit_sha }}"/' helm/values-ms2.yaml
          git config --global user.name "kkamal123"
          git config --global user.email "engr.kkamal@gmail.com"
          git commit -m "Update Microservice-2 image tag to ${{ steps.vars.outputs.commit_sha }}"

      - name: Push updated Helm deployment to GitHub
        run: git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Use the automatically generated GITHUB_TOKEN
